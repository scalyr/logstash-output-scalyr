version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  unittest:
    docker:
      - image: circleci/jruby:9.2.7.0-jdk
    steps:
      - checkout
      - run:
          name: Install bundler specified in Gemfile.lock
          command: |
            gem update --system
            gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
      - restore_cache:
          keys:
            - logstash-output-scalyr-{{ checksum "Gemfile.lock" }}
            - logstash-output-scalyr-
      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment
      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: logstash-output-scalyr-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Run rspec in parallel
          command: |
            # gem install rspec_junit_formatter
            bundle exec rspec
            #            --profile 10 \
            #            --format RspecJunitFormatter \
            #            --out test_results/rspec.xml \
            #            --format progress \
            # $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs
  smoketest:
    docker:
      - image: circleci/jruby:9.2.7.0-jdk
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - checkout # special step to check out source code to working directory
      - run:
          name: Build gem
          command: gem build logstash-output-scalyr.gemspec
      - run:
          name: Run smoketest script which first builds another Docker Logstash image and installs our gem
          command: |
            echo $pwd
            gemfile=$(ls *.gem)
            cp $gemfile .circleci/docker/
            source .circleci/smoketest_logstash.sh yarnsh/agent-testing:latest 300 $gemfile .circleci/docker Dockerfile
  microbenchmarks-jruby:
    docker:
      - image: circleci/jruby:9.2.7.0-jdk
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - checkout # special step to check out source code to working directory
      - run:
          name: Run flattening util benchmarks
          command: |
            echo $pwd
            echo "Flattening util results:"
            ruby spec/scalyr/common/flattening_benchmark.rb
  microbenchmarks-cruby:
    docker:
      - image: cimg/ruby:2.7.1-node
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - checkout # special step to check out source code to working directory
      - run:
          name: Run flattening util benchmarks
          command: |
            echo $pwd
            echo "Flattening util results:"
            ruby spec/scalyr/common/flattening_benchmark.rb
  rubygems-smoketest:
    docker:
      - image: circleci/jruby:9.2.7.0-jdk
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - checkout # special step to check out source code to working directory
      - run:
          name: Run smoketest script which first builds another Docker Logstash image and installs our gem
          command: |
            echo $pwd
            gemfile=$(ls *.gem)
            cp $gemfile .circleci/docker/
            source .circleci/smoketest_logstash.sh yarnsh/agent-testing:latest 300 $gemfile .circleci/docker Dockerfile.rubygems


workflows:
  version: 2
  unittest:
    jobs:
      - smoketest
      - unittest
      - microbenchmarks-jruby
      - microbenchmarks-cruby
  daily-rubygems-smoketest:
     jobs:
       - rubygems-smoketest
